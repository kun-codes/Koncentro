name: Build App

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, macos-13]
                python-version: [3.12]

        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Store Architecture
                run: |
                    ARCHITECTURE=$(uname -m)
                    echo "ARCHITECTURE=$ARCHITECTURE" >> $GITHUB_ENV

            -   name: Install dependencies
                env:
                    POETRY_VIRTUALENVS_CREATE: false
                run: |
                    python -m pip install --upgrade pip
                    python -m pip install poetry
                    poetry install --no-cache --no-interaction

            -   name: Debug Packages
                run: |
                    pip list
                    poetry show

            -   name: Download latest version of mitmproxy
                run: |
                    cd ..
                    if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
                        wget https://downloads.mitmproxy.org/11.0.2/mitmproxy-11.0.2-linux-x86_64.tar.gz
                        tar -xvf mitmproxy-11.0.2-linux-x86_64.tar.gz
                        cp mitmdump pomodoro-task-app.py/mitmdump
                    elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                        curl -LO https://downloads.mitmproxy.org/11.0.2/mitmproxy-11.0.2-macos-arm64.tar.gz
                        tar -xvf mitmproxy-11.0.2-macos-arm64.tar.gz
                        cp mitmproxy.app/Contents/MacOS/mitmdump pomodoro-task-app.py/mitmdump
                    elif [[ "${{ matrix.os }}" == "macos-13" ]]; then
                        curl -LO https://downloads.mitmproxy.org/11.0.2/mitmproxy-11.0.2-macos-x86_64.tar.gz
                        tar -xvf mitmproxy-11.0.2-macos-x86_64.tar.gz
                        cp mitmproxy.app/Contents/MacOS/mitmdump pomodoro-task-app.py/mitmdump
                    fi
                    cd pomodoro-task-app.py

            -   name: Build Executable
                uses: Nuitka/Nuitka-Action@main
                with:
                    nuitka-version: 'main'
                    script-name: |
                        pomodoro-task-app/__main__.py
                    mode: ${{ (matrix.os == 'macos-latest' || matrix.os == 'macos-13') && 'app' || 'standalone' }}
                    enable-plugins: 'pyside6'
                    include-data-files: |
                        ./pomodoro-task-app/website_blocker/filter.py=./website_blocker/filter.py
                        ./pomodoro-task-app/constants.py=./constants.py
                        ./pyproject.toml=./pyproject.toml
                        ./mitmdump=./mitmdump

            -   name: Install tree
                if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
                run: brew install tree

            - name: tree command
              run: |
                  tree build/

            -   name: Upload artifacts Linux
                if: matrix.os == 'ubuntu-latest'
                uses: actions/upload-artifact@v4
                with:
                    name: '${{ matrix.os }}_${{ env.ARCHITECTURE }}-build'
                    path: 'build/__main__.dist/'
                    include-hidden-files: 'true'

            -   name: Upload artifacts MacOS
                if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
                uses: actions/upload-artifact@v4
                with:
                    name: '${{ matrix.os }}_${{ env.ARCHITECTURE }}-build'
                    path: 'build/__main__.app/Contents/MacOS/'
                    include-hidden-files: 'true'
