name: Release Koncentro

on:
    workflow_call:


jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12'

            - name: Get app version
              run: |
                  # Read version from pyproject.toml
                  KONCENTRO_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
                  echo "KONCENTRO_VERSION=$KONCENTRO_VERSION" >> $GITHUB_ENV
                  echo "Koncentro version: $KONCENTRO_VERSION"

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  pattern: Koncentro*
                  path: release-artifacts
                  merge-multiple: true

            - name: List downloaded artifacts
              run: |
                  ls -la release-artifacts
                  find release-artifacts -type f | sort

            - name: Install GitHub CLI
              run: |
                  type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
                  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
                  sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
                  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
                  sudo apt update
                  sudo apt install gh -y

            - name: Create GitHub Release
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Create draft release with version tag
                  RELEASE_NOTES="Koncentro v$KONCENTRO_VERSION release"
                  gh release create "v$KONCENTRO_VERSION" --title "Koncentro v$KONCENTRO_VERSION" --notes "$RELEASE_NOTES" --draft
                  
                  # Upload all artifacts to the release
                  find release-artifacts -type f | while read file; do
                    echo "Uploading $file to the release..."
                    gh release upload "v$KONCENTRO_VERSION" "$file"
                  done
